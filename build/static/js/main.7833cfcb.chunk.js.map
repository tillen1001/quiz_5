{"version":3,"sources":["cgu_multiButton.js","cgu_hello.js","App.js","reportWebVitals.js","index.js"],"names":["CounterButton","props","state","counter","handleClick","bind","event","this","setState","console","log","text","Button","variant","color","onClick","React","Component","multiButton","num","output","i","push","styleArgument","fontSize","HelloCGU","style","App","className","MultiButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIMA,E,kDACF,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTC,QAAS,GAEX,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBALD,E,+CAOlB,SAAYC,GACVC,KAAKC,SAAS,CAACL,QAASI,KAAKL,MAAMC,QAAQ,IAC3CM,QAAQC,IAAIH,KAAKL,S,oBAEnB,WACE,IAAIS,EAAKJ,KAAKL,MAAMC,QACpB,OACE,eAACS,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAASR,KAAKH,YAA1D,+BACMO,EADN,sB,GAfoBK,IAAMC,WA6BjBC,EARG,SAACC,GAEjB,IADA,IAAIC,EAAO,GACHC,EAAE,EAAGA,EAAEF,EAAI,IAAKE,EACxBD,EAAOE,KAAK,cAAC,EAAD,KAEV,OAAOF,GC9BPG,EAAgB,CAAEC,SAAU,QAASV,MAAO,OAKnCW,EAHE,WACb,OAAO,oBAAIC,MAAUH,EAAd,4BCcII,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,8BACEH,MAEF,8BACEI,EAAY,UCCLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7833cfcb.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport React from 'react';\r\nconst styleArgument={fontSize: '100px', color: 'red'};\r\n\r\nclass CounterButton extends React.Component{\r\n    constructor(props){\r\n      super(props)\r\n      this.state={\r\n        counter: 0\r\n      }\r\n      this.handleClick=this.handleClick.bind(this)\r\n    }\r\n    handleClick(event){\r\n      this.setState({counter: this.state.counter+1});\r\n      console.log(this.state);\r\n    }\r\n    render(){\r\n      var text=this.state.counter;\r\n      return(\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>\r\n          你點了{text}次。\r\n        </Button>\r\n      );\r\n    }\r\n}\r\n  const multiButton=(num)=>{\r\n    var output=[];\r\n    for(let i=1; i<num+1; ++i){\r\n    output.push(<CounterButton />)\r\n    }\r\n      return output;\r\n  }\r\n\r\n  export default multiButton;","const styleArgument = { fontSize: '100px', color: 'red' };\r\n\r\nconst HelloCGU = () => {\r\n    return <h1 style = { styleArgument }> hello CGU!! </h1>;\r\n}\r\nexport default HelloCGU;","import './App.css';\nimport MultiButton from './cgu_multiButton';\nimport HelloCGU from './cgu_hello';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n      { HelloCGU() }\n      </div>\n      <div>\n      { MultiButton(10) }\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}